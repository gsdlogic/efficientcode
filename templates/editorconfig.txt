root = true

[*]
tab_width = 4
indent_size = 4
indent_style = space
end_of_line = crlf
charset = utf-8

[*.{cshtml,csproj,html,json,props,razor,wixproj,wxl,wxs,xaml,xml,yaml}]
tab_width = 2
indent_size = 2

[*.cs]
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async
csharp_style_namespace_declarations = file_scoped
csharp_style_prefer_primary_constructors = false
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true
dotnet_style_prefer_collection_expression = false
dotnet_style_prefer_inferred_anonymous_type_member_names = false
dotnet_style_prefer_inferred_tuple_names = false
csharp_using_directive_placement = inside_namespace

dotnet_diagnostic.IDE0010.severity = none # Add missing cases to switch statement
dotnet_diagnostic.IDE0045.severity = none # Use conditional expression for assignment
dotnet_diagnostic.IDE0046.severity = none # Use conditional expression for return
dotnet_diagnostic.IDE0055.severity = none # Formatting rule
dotnet_diagnostic.IDE0058.severity = none # Remove unnecessary expression value
dotnet_diagnostic.IDE0072.severity = none # Add missing cases to switch expression

[*.cshtml.cs]
dotnet_diagnostic.CA1812.severity = none # Avoid uninstantiated internal classes
dotnet_diagnostic.SA1649.severity = none # File name must match type name

[*.razor.cs]
dotnet_diagnostic.CA1515.severity = none # Consider making public types internal
